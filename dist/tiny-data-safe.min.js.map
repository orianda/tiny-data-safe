{"version":3,"sources":["tiny-data-safe.min.js"],"names":["create","Class","module","Object","exports","window","Error","name","indexOf","store","key","i","l","length","TinyDataSafe","this","add","data","push","set","index","get","rid","splice"],"mappings":";;;;;;;;;CASA,SAAWA,GACT,YAEA,IAAIC,GAAQD,GAEZ,IAAsB,gBAAXE,SAAuBA,iBAAkBC,SAAUD,OAAOE,kBAAmBD,QACtFD,OAAOE,QAAUH,MACZ,CAAA,KAAsB,gBAAXI,SAAuBA,iBAAkBF,SAGzD,KAAM,IAAIG,OAAM,8BAFhBD,QAAOJ,EAAMM,MAAQN,IAKtB,WACD,YAQA,SAASO,GAAQC,EAAOC,GACtB,GAAIC,GAAGC,CACP,KAAKD,EAAI,EAAGC,EAAIH,EAAMI,OAAQF,EAAIC,EAAGD,IACnC,GAAIF,EAAME,GAAG,KAAOD,EAClB,MAAOC,EAGX,QAAO,EAOT,QAASG,KACP,GAAIL,KAKJ,OAAMM,gBAAgBD,IAStBC,KAAKC,IAAM,SAAUC,GACnB,GAAIP,KAEJ,OADAD,GAAMS,MAAMR,EAAKO,IACVP,GAQTK,KAAKI,IAAM,SAAUT,EAAKO,GACxB,GAAIG,GAAQZ,EAAQC,EAAOC,EACvBU,GAAQ,EACVX,EAAMS,MAAMR,EAAKO,IAEjBR,EAAMW,GAAO,GAAKH,GAStBF,KAAKM,IAAM,SAAUX,GACnB,GAAIU,GAAQZ,EAAQC,EAAOC,EAC3B,OAAIU,GAAQ,EACV,OAEOX,EAAMW,GAAO,SAQxBL,KAAKO,IAAM,SAAUZ,GACnB,GAAIU,GAAQZ,EAAQC,EAAOC,EACvBU,IAAS,GACXX,EAAMc,OAAOH,EAAO,MAjDf,GAAIN,GAsDf,MAAOA","file":"tiny-data-safe.min.js","sourcesContent":["/*!\n * tiny-data-safe\n * Store data in safe and prevent them from being accessed without the valid key.\n *\n * @version v1.0.0\n * @link https://github.com/orianda/tiny-data-safe\n * @author Orianda <orianda@paan.de>\n * @license MIT\n */\n(function (create) {\r\n  'use strict';\r\n\r\n  var Class = create();\r\n\r\n  if (typeof module === 'object' && module instanceof Object && module.exports instanceof Object) {\r\n    module.exports = Class;\r\n  } else if (typeof window === 'object' && window instanceof Object) {\r\n    window[Class.name] = Class;\r\n  } else {\r\n    throw new Error('No valid context available.');\r\n  }\r\n\r\n})(function () {\r\n  'use strict';\r\n\r\n  /**\r\n   * Find index of key\r\n   * @param {Array[]} store\r\n   * @param {Object} key\r\n   * @returns {number}\r\n   */\r\n  function indexOf(store, key) {\r\n    var i, l;\r\n    for (i = 0, l = store.length; i < l; i++) {\r\n      if (store[i][0] === key) {\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  /**\r\n   * Create data safe instance\r\n   * @constructor\r\n   */\r\n  function TinyDataSafe() {\r\n    var store = [];\r\n\r\n    /**\r\n     * Ensure this context was created during new operation\r\n     */\r\n    if (!(this instanceof TinyDataSafe)) {\r\n      return new TinyDataSafe();\r\n    }\r\n\r\n    /**\r\n     * Append data to store\r\n     * @param {*} data\r\n     * @returns {Object}\r\n     */\r\n    this.add = function (data) {\r\n      var key = {};\r\n      store.push([key, data]);\r\n      return key;\r\n    };\r\n\r\n    /**\r\n     * Create or replace data\r\n     * @param {Object} key\r\n     * @param {*} data\r\n     */\r\n    this.set = function (key, data) {\r\n      var index = indexOf(store, key);\r\n      if (index < 0) {\r\n        store.push([key, data]);\r\n      } else {\r\n        store[index][1] = data;\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Get data of key\r\n     * @param {Object} key\r\n     * @returns {*}\r\n     */\r\n    this.get = function (key) {\r\n      var index = indexOf(store, key);\r\n      if (index < 0) {\r\n        return undefined;\r\n      } else {\r\n        return store[index][1];\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Removes data of key\r\n     * @param key\r\n     */\r\n    this.rid = function (key) {\r\n      var index = indexOf(store, key);\r\n      if (index >= 0) {\r\n        store.splice(index, 1);\r\n      }\r\n    };\r\n  }\r\n\r\n  return TinyDataSafe;\r\n});"]}